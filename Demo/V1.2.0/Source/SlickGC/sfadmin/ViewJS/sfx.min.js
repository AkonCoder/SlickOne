var somain = function () { function e() { } function t() { var t = lsm.getWebLogonCompanyID(); if (e.gselectedCompanyID = t, -2 === lsm.getWebLogonUserAccountType()) a(); else { var n = lsm.getWebLogonUserID(); jshelper.ajaxGet("api/PermissionData/GetLeftMenuList/" + n, null, function (t) { if (1 === t.Status) { var a = t.Entity; e.userPermissionTreeView = a, o(a) } else $.msgBox({ title: "Menu / List", content: "读取菜单记录失败！错误信息：" + t.Message, type: "error" }) }) } } function o(e) { var t = !0, o = !0, a = ""; $.each(e, function (e, n) { var s = n.StyleClass, i = n.ResourceName, r = "RESX06Z9-" + n.ID; a = t ? "collapsed active" : "collapsed", $('<li data-toggle="collapse" data-target="#' + r + '" class="' + a + '"><a href="#"><i class="' + s + '"></i> ' + i + ' <span class="arrow"></span></a></li>').appendTo($("#menu-content")); var l = $('<ul class="sub-menu collapse" id="' + r + '"></ul>').appendTo($("#menu-content")); $.each(n.children, function (e, a) { var n = { name: "RESX06Z9-" + a.ID, title: a.ResourceName, url: a.UrlAction }, s = ""; t && o && (s = 'class="active"'), $('<li><a href="#" ' + s + "data-page='" + JSON.stringify(n) + '\' onclick="somain.showTab(this)">' + a.ResourceName + "</a></li>").appendTo($(l)), o = !1 }), t = !1 }); var n = { name: "myprofile", title: "个人资料", url: "profile/index" }; $('<li data-target="#' + n.name + '"><a href="#"data-page=\'' + JSON.stringify(n) + '\' onclick="somain.showTab(this)"><i class="fa fa-user fa-lg"></i> Profile</a></li>').appendTo($("#menu-content")) } function a() { var e = { name: "mysuper", title: "基础设置", url: "company/list" }; $('<li data-target="#' + e.name + '"><a href="#"data-page=\'' + JSON.stringify(e) + '\' onclick="somain.showTab(this)"><i class="fa fa-user fa-lg"></i> 公司数据</a></li>').appendTo($("#menu-content")) } function n(t) { e.displayProgressBar(!0); var o = $(t).data("page"); $(t).empty(), $(t).load(o, function () { e.displayProgressBar(!1) }) } function s(t, o) { if ("" === o) return $.msgBox({ title: "SlickAdmin / Page", content: "指向页面URL字段不存在，请再次确认！", type: "alert" }), !1; $.ajax({ type: "HEAD", url: o, statusCode: { 404: function () { $.msgBox({ title: "SlickAdmin / Page", content: "页面不存在！Error:404 Page Not Found.", type: "alert" }) } }, success: function () { e.displayProgressBar(!0), BootstrapDialog.show({ title: t.toUpperCase(), message: $("<div></div>").load(o, function () { e.displayProgressBar(!1) }) }) }, error: function () { } }) } function i(e, t) { if (void 0 === t || "" === t) { return $.msgBox({ title: "SlickAdmin / Page", content: "您没有权限操作，或者程序方法[{0})]未定义，请联系管理员确认！".formatUnicorn(e), type: "alert" }), !1 } jshelper.executeFunctionByName(t, window) } return e.tablist = [], e.activeTabName = "", e.activeToolButtonType = "", e.userPermissionTreeView = null, e.gselectedCompanyID = 0, e.init = function () { function e() { 1 == a ? (o.removeClass("is-open"), o.addClass("is-closed"), a = !1) : (o.removeClass("is-closed"), o.addClass("is-open"), a = !0) } var o = $(".hamburger"), a = !1; o.click(function () { e() }), $('[data-toggle="offcanvas"]').click(function () { $("#wrapper").toggleClass("toggled") }), t() }, e.showTab = function (t) { var o = $(t).data("page"), a = o.name, s = o.title, i = o.url; if (e.activeTabName = a, "mydashboard" !== a) { var r = a + "Tab_", l = $("a[href='#" + r + "'"); if (0 === l.length) { $("#myTab").append($('<li><a href="#' + r + '">' + s + '<button class="close" type="button" title="Remove this page"> ×</button></a></li>')); var c = $('<div class="tab-pane" style="height:700px;width:100%;margin-top:10px;" id="' + r + '" data-page="' + i + '"></div>').appendTo("#divTabContentContainer"); e.activeTabContent = c, n(e.activeTabContent), $("#myTab a:last").tab("show") } else e.activeTabContent = $("#" + r), l.tab("show") } else $("#myTab a:first").tab("show") }, e.initPage = function () { $("#myTab").on("click", "a", function (e) { e.preventDefault(), $(this).tab("show") }), $("#myTab").on("click", " li a .close", function () { $(this).parents("li").children("a").attr("href"); $(this).parents("li").remove("li"), $("#myTab a:first").tab("show") }), $("#myTab").tab() }, e.addrecord = function (t) { e.activeToolButtonType = "add", s(e.activeToolButtonType, t) }, e.editrecord = function (t) { e.activeToolButtonType = "edit", s(e.activeToolButtonType, t) }, e.deleterecord = function (t) { e.activeToolButtonType = "delete", i(e.activeToolButtonType, t) }, e.executerecord = function (t, o) { e.activeToolButtonType = t, i(e.activeToolButtonType, o) }, e.refreshrecord = function () { e.activeToolButtonType = "refresh", n(e.activeTabContent) }, e.displayProgressBar = function (e) { !0 === e ? $("#loading-indicator").show() : $("#loading-indicator").hide() }, e }(), processlist = function () { function e() { } return e.pselectedProcessEntity = null, e.getProcessList = function () { var t = {}; t.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("/sfd/api/Wf2Xml/GetProcessListSimple", JSON.stringify(t), function (t) { if (1 === t.Status) { var o = document.querySelector("#myprocessgrid"); $(o).empty(); var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 50 }, { headerName: "流程GUID", field: "ProcessGUID", width: 120 }, { headerName: "流程名称", field: "ProcessName", width: 160 }, { headerName: "版本", field: "Version", width: 40 }, { headerName: "状态", field: "IsUsing", width: 60 }, { headerName: "创建日期", field: "CreatedDateTime", width: 120 }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedProcessGUID = t.ProcessGUID, e.pselectedProcessEntity = t }) } }; new agGrid.Grid(o, a), a.api.setRowData(t.Entity) } else $.msgBox({ title: "Process / List", content: "读取流程定义记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.createProcess = function () { e.pselectedProcessEntity = null, BootstrapDialog.show({ title: "流程新建", message: $("<div></div>").load("process/edit"), draggable: !0 }) }, e.loadProcess = function () { var t = null; "edit" === somain.activeToolButtonType && (t = e.pselectedProcessEntity), null !== t ? ($("#txtProcessGUID").val(t.ProcessGUID), $("#txtProcessName").val(t.ProcessName), $("#txtVersion").val(t.Version), $("#ddlIsUsing").val(t.IsUsing), $("#txtDescription").val(t.Description)) : ($("#txtProcessGUID").val(""), $("#txtProcessName").val(""), $("#txtVersion").val("1"), $("#ddlIsUsing").val(), $("#txtDescription").val("")) }, e.editProcess = function () { if (null == e.pselectedProcessEntity) return $.msgBox({ title: "Designer / Process", content: "请先选择流程记录！", type: "alert" }), !1; BootstrapDialog.show({ title: "流程编辑", message: $("<div></div>").load("process/edit"), draggable: !0 }) }, e.saveProcess = function () { if ("" == $("#txtProcessName").val() || "" == $("#txtVersion").val()) return $.msgBox({ title: "Designer / Process", content: "请输入流程基本信息！", type: "alert" }), !1; var e = { ProcessGUID: $("#txtProcessGUID").val(), ProcessName: $("#txtProcessName").val(), Version: $("#txtVersion").val(), IsUsing: $("#ddlIsUsing").val(), Description: $("#txtDescription").val() }; "add" === somain.activeToolButtonType ? processapi.create(e, function (e) { e.Status }) : "edit" === somain.activeToolButtonType && processapi.update(e) }, e.design = function () { var t = e.pselectedProcessEntity; if (null === t) return $.msgBox({ title: "Designer / Process", content: "请先选择流程记录！", type: "alert" }), !1; var o = "/sfd/home?CompanyID=" + somain.gselectedCompanyID + "&ID=" + t.ID; window.open(o, "_blank") }, e.delete = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除流程定义记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { ProcessGUID: e.pselectedProcessEntity.ProcessGUID, Version: e.pselectedProcessEntity.Version }; processapi.delete(o) } } }) }, e }(), processapi = function () { function e() { } return e.create = function (e, t) { jshelper.ajaxPost("/sfd/api/Wf2Xml/CreateProcess", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "Designer / Process", content: "新创建流程记录成功保存！", type: "info" }) : $.msgBox({ title: "Designer / Process", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }), t(e) }) }, e.update = function (e) { jshelper.ajaxPost("/sfd/api/Wf2Xml/UpdateProcess", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "Designer / Process", content: "流程记录成功保存！", type: "info" }) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxPost("/sfd/api/Wf2Xml/DeleteProcess", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "Designer / Process", content: "流程记录已经删除！", type: "info" }), processlist.getProcessList()) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.queryProcessFile = function (e, t) { jshelper.ajaxPost("/sfd/api/Wf2Xml/QueryProcessFile", JSON.stringify(e), function (e) { t(e) }) }, e.queryProcessFileByID = function (e, t) { jshelper.ajaxPost("/sfd/api/Wf2Xml/QueryProcessFileByID", JSON.stringify(e), function (e) { t(e) }) }, e.saveProcessFile = function (e) { jshelper.ajaxPost("/sfd/api/Wf2Xml/SaveProcessFile", JSON.stringify(e), function (e) { "1" == e.Status ? $.msgBox({ title: "Designer / Index", content: "流程XML内容保存成功！", type: "info" }) : $.msgBox({ title: "Designer / Index", content: "流程XML内容保存失败！错误信息：" + e.Message, type: "info" }) }) }, e }(), companylist = function () { function e() { } return e.loadCompany = function () { if ($(".company-type").hide(), "add" === somain.activeToolButtonType) $("#txtCompanyName").val(""), $("#ddlCompanyType").val("0"), $("#txtCompanyCode").val(""), $("#txtDescription").val(""); else if ("edit" === somain.activeToolButtonType && "" !== e.pselectedCompanyID) { var t = e.pselectedCompanyDataRow; $("#txtCompanyName").val(t.CompanyName), $("#ddlCompanyType").val(t.CompanyType), $("#txtCompanyCode").val(t.CompanyCode), $("#txtDescription").val(t.Description) } }, e.getCompanyList = function () { var t = {}; t.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("api/CompanyData/GetCompanyNodeAll", JSON.stringify(t), function (t) { if (1 === t.Status) { var o = { columnDefs: [{ headerName: "ID", field: "ID", width: 40, cssClass: "bg-gray" }, { headerName: "公司名称", field: "CompanyName", width: 160, cssClass: "bg-gray", cellRenderer: "group", cellRendererParams: { innerRenderer: function (e) { return e.node.data.CompanyName } } }, { headerName: "类型", field: "CompanyType", width: 40, cssClass: "bg-gray" }, { headerName: "公司代码", field: "CompanyCode", width: 120, cssClass: "bg-gray" }, { headerName: "描述", field: "Description", width: 120, cssClass: "bg-gray" }], rowSelection: "single", enableColResize: !0, enableSorting: !0, animateRows: !0, rowHeight: 30, getNodeChildDetails: function (e) { return e.group ? { group: !0, name: e.CompanyName, children: e.children, expanded: !0 } : null }, onRowClicked: function (t) { var o = t.node; e.pselectedCompanyID = o.data.ID, e.pselectedCompanyType = o.data.CompanyType, e.pselectedCompanyDataRow = o.data, userlist.getCompanyAdminList() } }, a = document.querySelector("#mycompanygrid"); $(a).empty(); var n = []; n.push(t.Entity), new agGrid.Grid(a, o), o.api.setRowData(n) } else $.msgBox({ title: "Role / List", content: "读取公司记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.saveCompany = function () { if ("" == $("#txtCompanyName").val() || "" == $("#ddlCompanyType").val()) return $.msgBox({ title: "SlickAdmin / Company", content: "请输入公司基本信息！", type: "alert" }), !1; var t = { ID: "0", CompanyName: $("#txtCompanyName").val(), CompanyType: $("#ddlCompanyType").val(), CompanyCode: $("#txtCompanyCode").val(), Description: $("#txtDescription").val() }; "edit" === somain.activeToolButtonType ? (t.ID = e.pselectedCompanyID, t.ParentID = e.pselectedCompanyDataRow.ParentID) : t.ParentID = e.pselectedCompanyID, companyapi.save(t) }, e.delete = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除公司记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { ID: e.pselectedCompanyID }; companyapi.delete(o) } } }) }, e }(), companyapi = function () { function e() { } return e.save = function (e) { jshelper.ajaxPost("api/CompanyData/SaveCompany", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickAdmin / Company", content: "已经成功保存公司数据！", type: "info" }), companylist.getCompanyList()) : $.msgBox({ title: "SlickAdmin / Company", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxPost("api/CompanyData/DeleteCompany", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickAdmin / Company", content: "公司记录已经删除！", type: "info" }), companylist.getCompanyList()) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e }(), formlist = function () { function e() { } return e.pselecteFormEntity = null, e.createForm = function () { e.pselecteFormEntity = null, BootstrapDialog.show({ title: "表单新建", message: $("<div></div>").load("form/edit"), draggable: !0 }) }, e.loadForm = function () { var t = null; "edit" === somain.activeToolButtonType && (t = e.pselecteFormEntity), null !== t ? ($("#txtEntityTitle").val(t.EntityTitle), $("#txtEntityName").val(t.EntityName), $("#txtDescription").val(t.Description)) : ($("#txtEntityTitle").val(""), $("#txtEntityName").val(""), $("#txtDescription").val("")) }, e.saveForm = function () { if ("" == $("#txtEntityName").val() || "" == $("#txtEntityTitle").val()) return $.msgBox({ title: "Designer / Form", content: "请输入表单基本信息！", type: "alert" }), !1; var e = { EntityTitle: $("#txtEntityTitle").val(), EntityName: $("#txtEntityName").val(), Description: $("#txtDescription").val() }; "add" === somain.activeToolButtonType ? formapi.create(e, function (e) { e.Status }) : "edit" === somain.activeToolButtonType && formapi.update(e) }, e.editForm = function () { if (null == e.pselecteFormEntity) return $.msgBox({ title: "Designer / Entity", content: "请先选择表单记录！", type: "alert" }), !1; BootstrapDialog.show({ title: "表单编辑", message: $("<div></div>").load("form/edit"), draggable: !0 }) }, e.getFormList = function () { var t = {}; t.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("/smd/api/EavData/GetEntityDefList2", JSON.stringify(t), function (t) { if (1 === t.Status) { var o = document.querySelector("#myformgrid"); $(o).empty(); var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 50 }, { headerName: "表单名称", field: "EntityName", width: 120 }, { headerName: "表单标题", field: "EntityTitle", width: 160 }, { headerName: "表单编码", field: "EntityCode", width: 80 }, { headerName: "描述", field: "Description", width: 160 }, { headerName: "创建日期", field: "CreatedDate", width: 120 }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedFormID = t.ID, e.pselecteFormEntity = t }) } }; new agGrid.Grid(o, a), a.api.setRowData(t.Entity) } else $.msgBox({ title: "Form / List", content: "读取表单定义记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.design = function () { var t = e.pselecteFormEntity; if (null === t) return $.msgBox({ title: "Form / Design", content: "请先选择表单记录！", type: "alert" }), !1; var o = "/smd/home?CompanyID=" + somain.gselectedCompanyID + "&ID=" + t.ID; window.open(o, "_blank") }, e.delete = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除表单定义记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { "Yes" != t || formapi.delete(e.pselecteFormEntity.ID) } }) }, e }(), formapi = function () { function e() { } return e.create = function (e, t) { jshelper.ajaxPost("/smd/api/EavData/SaveEntityDef", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "Designer / Form", content: "新创建表单记录成功保存！", type: "info" }) : $.msgBox({ title: "Designer / Form", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }), t(e) }) }, e.update = function (e) { jshelper.ajaxPost("/smd/api/EavData/SaveEntityDef", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "Designer / Form", content: "表单记录成功保存！", type: "info" }) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxGet("/smd/api/EavData/DeleteEntityDef/" + e, null, function (e) { 1 == e.Status ? ($.msgBox({ title: "Designer / Form", content: "表单记录已经删除！", type: "info" }), formlist.getFormList()) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e }(), rolelist = function () { function e() { } return e.pselectedRoleID = "", e.pselectedRoleDataRow = null, e.getRoleList = function () { var t = {}; t.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("api/RoleData/GetRoleAll", JSON.stringify(t), function (t) { if (1 === t.Status) { var o = document.querySelector("#myrolegrid"); $(o).empty(); var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 40, cssClass: "bg-gray" }, { headerName: "角色名称", field: "RoleName", width: 120, cssClass: "bg-gray" }, { headerName: "角色代码", field: "RoleCode", width: 160, cssClass: "bg-gray" }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedRoleID = t.ID, e.pselectedRoleDataRow = t }) } }; new agGrid.Grid(o, a), a.api.setRowData(t.Entity) } else $.msgBox({ title: "Role / List", content: "读取角色记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.loadRole = function () { if ("edit" === somain.activeToolButtonType && "" != e.pselectedRoleID) { var t = e.pselectedRoleDataRow; $("#txtRoleName").val(t.RoleName), $("#txtRoleCode").val(t.RoleCode) } else $("#txtRoleName").val(""), $("#txtRoleCode").val("") }, e.editRole = function () { if (null == e.pselectedRoleDataRow) return $.msgBox({ title: "SlickAdmin / Role", content: "请先选择角色记录！", type: "alert" }), !1 }, e.saveRole = function () { if ("" == $("#txtRoleName").val() || "" == $("#txtRoleCode").val()) return $.msgBox({ title: "SlickAdmin / Role", content: "请输入角色基本信息！", type: "alert" }), !1; var t = { ID: "0", RoleName: $("#txtRoleName").val(), RoleCode: $("#txtRoleCode").val() }; "edit" === somain.activeToolButtonType && (t.ID = e.pselectedRoleID), roleapi.save(t) }, e.delete = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除角色记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { ID: e.pselectedRoleID }; roleapi.delete(o) } } }) }, e }(), roleapi = function () { function e() { } return e.save = function (e) { jshelper.ajaxPost("api/RoleData/SaveRole", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "SlickAdmin / Role", content: "角色记录已经成功保存！", type: "info" }) : $.msgBox({ title: "SlickAdmin / Role", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxPost("api/RoleData/DeleteRole", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickAdmin / Role", content: "角色记录已经删除！", type: "info" }), rolelist.getRoleList()) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e }(), userlist = function () { function e() { } return e.pselectedUserID = "", e.pselectedUserDataRow = null, e.getUserList = function () { var t = document.querySelector("#myusergrid"); $(t).empty(); var o = {}; o.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("api/RoleData/GetUserAll", JSON.stringify(o), function (o) { if (1 === o.Status) { var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 40, cssClass: "bg-gray" }, { headerName: "用户名称", field: "UserName", width: 120, cssClass: "bg-gray" }, { headerName: "登录名称", field: "LoginName", width: 120, cssClass: "bg-gray" }, { headerName: "状态", field: "Status", width: 60, cssClass: "bg-gray" }, { headerName: "电子邮件", field: "EMail", width: 180, cssClass: "bg-gray" }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedUserID = t.ID, e.pselectedUserDataRow = t }) } }; new agGrid.Grid(t, a), a.api.setRowData(o.Entity) } else $.msgBox({ title: "User / List", content: "读取用户记录失败！错误信息：" + o.Message, type: "error" }) }) }, e.loadUser = function () { if ("edit" === somain.activeToolButtonType && "" != e.pselectedUserID) { var t = e.pselectedUserDataRow; $("#txtUserName").val(t.UserName) } else $("#txtUserName").val("") }, e.editUser = function () { if (null == e.pselectedUserDataRow) return $.msgBox({ title: "SlickAdmin / User", content: "请先选择用户记录！", type: "alert" }), !1; BootstrapDialog.show({ title: "user", message: $("<div></div>").load("user/edit") }) }, e.saveUser = function (t, o) { var a = "", n = $("#txtUserName").val(), s = $("#txtLoginName").val(), i = $("#txtPassword").val(), r = ($("#txtPasswordConfirmed").val(), $("#txtEmail").val()); if (void 0 === t ? a = "无效的公司标识！" : void 0 == n || 0 == n.length ? a = "请输入用户基本信息！" : s.length < 4 ? a = "登录名称长度不能低于4个字符，请重新输入！" : i.length < 6 && (a = "密码长度不能小于6位，请重新输入！"), "" !== a) return $.msgBox({ title: "SlickAdmin / User", content: a, type: "alert" }), !1; var l = { ID: "0", CompanyID: t, AccountType: o, UserName: n, LoginName: s, Password: i, EMail: r }; "edit" === somain.activeToolButtonType && (l.ID = e.pselectedUserID), userapi.save(l) }, e.deleteUser = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除用户记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { ID: e.pselectedUserID }; userapi.delete(o) } } }) }, e.deleteAdmin = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除用户记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { ID: e.pselectedAdminID }; userapi.delete(o) } } }) }, e.sure = function () { $("#modelRoleListForm").modal("hide"), e.pselecteUserID }, e.getCompanyAdminList = function () { var t = document.querySelector("#myadmingrid"); $(t).empty(); var o = {}; o.CompanyID = companylist.pselectedCompanyID, jshelper.ajaxPost("api/RoleData/GetCompanyAdminAll", JSON.stringify(o), function (o) { if (1 === o.Status) { var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 40, cssClass: "bg-gray" }, { headerName: "用户名称", field: "UserName", width: 120, cssClass: "bg-gray" }, { headerName: "登录名称", field: "LoginName", width: 120, cssClass: "bg-gray" }, { headerName: "状态", field: "Status", width: 60, cssClass: "bg-gray" }, { headerName: "电子邮件", field: "EMail", width: 180, cssClass: "bg-gray" }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedAdminID = t.ID, e.pselectedAdminDataRow = t }) } }; new agGrid.Grid(t, a), a.api.setRowData(o.Entity) } else $.msgBox({ title: "Admin / List", content: "读取公司管理员记录失败！错误信息：" + o.Message, type: "error" }) }) }, e.resetadminpassword = function () { var t = {}; t.ID = e.pselectedAdminID, t.CompanyID = companylist.pselectedCompanyID, userapi.resetpassword(t) }, e.resetuserpassword = function () { var t = {}; t.ID = e.pselectedUserID, t.CompanyID = somain.gselectedCompanyID, userapi.resetpassword(t) }, e }(), userapi = function () { function e() { } return e.save = function (e) { jshelper.ajaxPost("api/Account/Register", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "SlickAdmin / User", content: "用户记录成功保存！", type: "info" }) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxPost("api/RoleData/DeleteUser", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "SlickAdmin / User", content: "用户记录已经删除！", type: "info" }) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.resetpassword = function (e) { jshelper.ajaxPost("api/Account/ResetPassword", JSON.stringify(e), function (e) { 1 == e.Status ? $.msgBox({ title: "SlickAdmin / User", content: "成功重置密码为：" + e.ExtraData, type: "info" }) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e }(), userlistdialog = function () { function e() { } return e.pselectedRoleID = "", e.pselectedUserID = "", e.pselectedUserDataRow = null, e.onUserSelected4Adding = new slick.Event, e.getUserList = function () { var t = {}; t.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("api/RoleData/GetUserAll", JSON.stringify(t), function (t) { if (1 === t.Status) { var o = document.querySelector("#myuserlistdialoggrid"); $(o).empty(); var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 40, cssClass: "bg-gray" }, { headerName: "登录名称", field: "LoginName", width: 120, cssClass: "bg-gray" }, { headerName: "用户名称", field: "UserName", width: 120, cssClass: "bg-gray" }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedUserID = t.ID, e.pselectedUserDataRow = t }) } }; new agGrid.Grid(o, a), a.api.setRowData(t.Entity) } }) }, e.sure = function () { slick.trigger(e.onUserSelected4Adding, { UserID: e.pselectedUserID, RoleID: e.pselectedRoleID }) }, e.cancel = function () { e.pselectedUserID = "", e.pselectedUserDataRow = null }, e }(), roleusertree = function () { function e() { } function t(e, t) { if ("root" !== t.type) { var o = "", a = $("#" + t.tId + "_span"), n = null, l = null; if ("role" === t.type) { if (t.editNameFlag || $("#addBtn_" + t.tId).length > 0) return; if (o += "<span class='button add' id='addBtn_" + t.tId + "' title='添加用户' ></span>", a.after(o), (n = $("#addBtn_" + t.tId)) && n.bind("click", function () { s(t.roleId) }), t.editNameFlag || $("#rmvBtn_" + t.tId).length > 0) return; o = "<span class='button remove' id='rmvBtn_" + t.tId + "' title='全部删除用户' onfocus='this.blur();'></span>", a.after(o), (l = $("#rmvBtn_" + t.tId)) && l.bind("click", function () { i(t.roleId) }) } else if ("user" === t.type) { if (t.editNameFlag || $("#rmvBtn_" + t.tId).length > 0) return; o = "<span class='button remove' id='rmvBtn_" + t.tId + "' title='删除用户' onfocus='this.blur();'></span>", a.after(o), (l = $("#rmvBtn_" + t.tId)) && l.bind("click", function () { r(t.userId, t.roleId) }) } } } function o(e, t) { $("#addBtn_" + t.tId).unbind().remove(), $("#rmvBtn_" + t.tId).unbind().remove() } function a() { return { check: { enable: !0 }, view: { addHoverDom: t, removeHoverDom: o, dblClickExpand: !1, showLine: !0, selectedMulti: !1 }, data: { simpleData: { enable: !0, idKey: "id", pIdKey: "pId", rootPId: "" } }, callback: { beforeClick: function (e, t) { var o = $.fn.zTree.getZTreeObj("myroleusertree"); return !t.isParent || (o.expandNode(t), !1) }, onClick: function (e, t, o) { } } } } function n(e, t) { t.RoleID > 0 && t.UserID > 0 && roleuserapi.addRoleUser(t) } function s(e) { userlistdialog.pselectedRoleID = e, somain.displayProgressBar(!0), BootstrapDialog.show({ title: "User", message: $("<div></div>").load("User/Dialog", function () { somain.displayProgressBar(!1) }) }) } function i(e) { $.msgBox({ title: "Are You Sure", content: "确实要删除角色下的全部用户记录吗? 请您慎重操作!!!", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { UserID: -1, RoleID: e }; roleuserapi.delete(o) } } }) } function r(e, t) { $.msgBox({ title: "Are You Sure", content: "确实要删除角色下的用户记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (o) { if ("Yes" != o); else { var a = { UserID: e, RoleID: t }; roleuserapi.delete(a) } } }) } return e.pmztree = null, e.getRoleUserTree = function () { var t = [{ id: 0, pId: -1, name: "角色列表", type: "root", open: !0 }], o = {}; o.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("api/RoleData/GetRoleUserAll", JSON.stringify(o), function (o) { if (1 == o.Status) { var s = null, i = null, r = 0, l = o.Entity; $.each(l, function (e, o) { var a = "r" + o.RoleID; r !== a && (s = { id: a, pId: 0, roleId: o.RoleID, name: o.RoleName, type: "role", open: !1 }, t.push(s), r = a), 0 !== o.ID && (i = { id: "ru" + o.ID, pId: r, userId: o.UserID, name: o.UserName, roleId: o.RoleID, type: "user", open: !1 }, t.push(i)) }); var c = $("#myroleusertree"); e.pmztree = $.fn.zTree.init(c, a(), t), userlistdialog.onUserSelected4Adding.subscribe(n) } }) }, e }(), roleuserapi = function () { function e() { } return e.addRoleUser = function (e) { jshelper.ajaxPost("api/RoleData/AddRoleUser", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickOne / Role", content: "已经成功添加用户到该角色！", type: "info" }), roleusertree.getRoleUserTree()) : $.msgBox({ title: "SlickOne / Role", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxPost("api/RoleData/DeleteRoleUser", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickOne / Role", content: "角色下的用户记录已经删除！", type: "info" }), roleusertree.getRoleUserTree()) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e }(), resourcelist = function () { function e() { } function t(e, t) { "edit" === t ? (1 === e && $(".resource-type-system").show(), 2 === e && $(".resource-type-page").show(), 5 === e && $(".resource-type-action").show()) : (0 === e && $(".resource-type-system").show(), 1 === e && $(".resource-type-page").show(), 2 === e && $(".resource-type-action").show()) } return e.loadResource = function () { if ($(".resource-type").hide(), "add" === somain.activeToolButtonType) $("#txtResourceName").val(""), $("#ddlResourceTypeID").val("0"), $("#txtUrlAction").val(""), $("#txtDataAction").val(""), $("#txtStyleClass").val(""), $("#txtOrderNum").val(""); else if ("edit" === somain.activeToolButtonType && "" !== e.pselectedResourceID) { var o = e.pselectedResourceDataRow; $("#txtResourceName").val(o.ResourceName), $("#ddlResourceTypeID").val(o.ResourceTypeID), $("#txtUrlAction").val(o.UrlAction), $("#txtDataAction").val(o.DataAction), $("#txtStyleClass").val(o.StyleClass), $("#txtOrderNum").val(o.OrderNum) } t(e.pselectedResourceTypeID, somain.activeToolButtonType) }, e.getResourceList = function () { var t = {}; t.CompanyID = somain.gselectedCompanyID, jshelper.ajaxPost("api/ResourceData/GetResourceNodeAll", JSON.stringify(t), function (t) { if (1 === t.Status) { var o = { columnDefs: [{ headerName: "ID", field: "ID", width: 40, cssClass: "bg-gray" }, { headerName: "资源名称", field: "ResourceName", width: 160, cssClass: "bg-gray", cellRenderer: "group", cellRendererParams: { innerRenderer: function (e) { return e.node.data.ResourceName } } }, { headerName: "类型", field: "ResourceTypeID", width: 40, cssClass: "bg-gray" }, { headerName: "页面URL", field: "UrlAction", width: 120, cssClass: "bg-gray" }, { headerName: "数据操作", field: "DataAction", width: 120, cssClass: "bg-gray" }, { headerName: "样式", field: "StyleClass", width: 200, cssClass: "bg-gray" }, { headerName: "排序", field: "OrderNum", width: 60, cssClass: "bg-gray" }], rowSelection: "single", enableColResize: !0, enableSorting: !0, animateRows: !0, rowHeight: 30, getNodeChildDetails: function (e) { return e.group ? { group: !0, name: e.ResourceName, children: e.children, expanded: e.ResourceTypeID < 3 ? "true" : "false" } : null }, onRowClicked: function (t) { var o = t.node; e.pselectedResourceID = o.data.ID, e.pselectedResourceTypeID = o.data.ResourceTypeID, e.pselectedResourceDataRow = o.data } }, a = document.querySelector("#myresourcegrid"); $(a).empty(); var n = []; n.push(t.Entity), new agGrid.Grid(a, o), o.api.setRowData(n) } else $.msgBox({ title: "Role / List", content: "读取资源记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.saveResource = function () { if ("" == $("#txtResourceName").val() || "" == $("#txtResourceCode").val()) return $.msgBox({ title: "SlickAdmin / Resource", content: "请输入资源基本信息！", type: "alert" }), !1; var t = { ID: "0", ResourceName: $("#txtResourceName").val(), ResourceTypeID: $("#ddlResourceTypeID").val(), UrlAction: $("#txtUrlAction").val(), StyleClass: $("#txtStyleClass").val(), OrderNum: $("#txtOrderNum").val() }; "edit" === somain.activeToolButtonType ? (t.ID = e.pselectedResourceID, t.ParentID = e.pselectedResourceDataRow.ParentID) : t.ParentID = e.pselectedResourceID, resourceapi.save(t) }, e.delete = function () { $.msgBox({ title: "Are You Sure", content: "确实要删除资源记录吗? ", type: "confirm", buttons: [{ value: "Yes" }, { value: "Cancel" }], success: function (t) { if ("Yes" != t); else { var o = { ID: e.pselectedResourceID }; resourceapi.delete(o) } } }) }, e }(), resourceapi = function () { function e() { } return e.save = function (e) { jshelper.ajaxPost("api/ResourceData/SaveResource", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickAdmin / Resource", content: "已经成功保存资源数据！", type: "info" }), resourcelist.getResourceList()) : $.msgBox({ title: "SlickAdmin / Resource", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e.delete = function (e) { jshelper.ajaxPost("api/ResourceData/DeleteResource", JSON.stringify(e), function (e) { 1 == e.Status ? ($.msgBox({ title: "SlickAdmin / Resource", content: "资源记录已经删除！", type: "info" }), resourcelist.getResourceList()) : $.msgBox({ title: "Ooops", content: e.Message, type: "error", buttons: [{ value: "Ok" }] }) }) }, e }(), loglist = function () { function e() { } return e.getExceptionLogList = function () { jshelper.ajaxGet("api/LogData/GetExceptionList", null, function (t) { if (1 === t.Status) { var o = document.querySelector("#myloggrid"); $(o).empty(); var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 50 }, { headerName: "类型", field: "EventTypeID", width: 60 }, { headerName: "优先级", field: "Priority", width: 60 }, { headerName: "紧急", field: "Severity", width: 60 }, { headerName: "标题", field: "Title", width: 160 }, { headerName: "信息", field: "Message", width: 160 }, { headerName: "创建日期", field: "Timestamp", width: 120 }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedExceptionLogID = t.ID, e.pselecteExceptionLogDataRow = t }) } }; new agGrid.Grid(o, a), a.api.setRowData(t.Entity) } else $.msgBox({ title: "Log / List", content: "读取异常日志记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.getUserLogList = function () { jshelper.ajaxGet("api/LogData/GetUserLogPaged100", null, function (t) { if (1 === t.Status) { var o = document.querySelector("#myuserloggrid"); $(o).empty(); var a = { columnDefs: [{ headerName: "ID", field: "ID", width: 50 }, { headerName: "用户ID", field: "UserID", width: 60 }, { headerName: "登录名称", field: "LoginName", width: 60 }, { headerName: "登录时间", field: "LoginTime", width: 160 }, { headerName: "退出时间", field: "LogoutTime", width: 160 }, { headerName: "IP地址", field: "IPAddress", width: 120 }], rowSelection: "single", onSelectionChanged: function () { a.api.getSelectedRows().forEach(function (t, o) { e.pselectedUserLogID = t.ID, e.pselecteUserLogDataRow = t }) } }; new agGrid.Grid(o, a), a.api.setRowData(t.Entity) } else $.msgBox({ title: "Log / List", content: "读取用户登录记录失败！错误信息：" + t.Message, type: "error" }) }) }, e.getOperationList = function () { }, e }();